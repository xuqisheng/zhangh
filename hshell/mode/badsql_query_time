#!/bin/bash 
# ------------------------------------------------------------------------------------------------------------------------------------------------------
# function:
#          This script extracts the top "N" worst sqls ordered by query_time,which often lead to high cpu load and low server efficiency 
# usages  :
#          ./badsql_query_time [<N>]
# e.g.    :
#          ./badsql_query_time       # when No <N> is given,it defaults to 50
#          ./badsql_query_time 50    
#          ./badsql_query_time 100   
# remarks :
#          This list of sqls is also called 'server killer'
# -----------------------------------------------------------------------------------------------------------------------------------------------------

# top n

Htopn=$1
if [ -z "$Htopn" ]; then
   Htopn=50
elif echo "$Htopn" | grep -E "^[0-9]+$" >/dev/null; then
   :
else
   exit
fi

# the MySQL slow.log

Hfile=`ls -1t /var/lib/mysql/*-slow.log 2>/dev/null | head -n 1`
[ -z "$Hfile" ] && exit 

# use the last 500000 lines for analization

Hslowlog=/root/mode/tmp/Hquery_time$$.tmp
tail -n 500000 $Hfile > $Hslowlog

# filter etc.

cat $Hslowlog |
sed -re "/^(# User@Host: )/ i # Time: unknown" | sed -re "s/$/HrYhBy/" |
tr -d "\n" |
sed -re "s/(# Time: [0-9]{6} [0-9]{2}:[0-9]{2}:[0-9]{2}HrYhBy)# Time: unknownHrYhBy/\n\1/g" | sed -re "s/(# Time: ([0-9]{6} |unknown))/\n\1/g" |
grep -E "Query_time: ([0-9]{2,}|[1-9])\." |
grep -E -v "/\*!40001 SQL_NO_CACHE \*/" |
grep -v "18446744" |
sed -re "s/(.*Query_time: ([^ ]+).*)/\2 \1/" |
sort -gr | sed -re "s/^[^ ]+ (.*)/\1/" |
grep -n "" |
sed -n "1,$Htopn p" |
sed -re "1,10 s/^([0-9]+):/# Ranked \1 !!! 元芳，怎么办呢?\n#\n/" |
sed -re "11,$ s/^([0-9]+):/# Ranked \1\n#\n/" |
sed -re "1 i #\n# Mode generated bad sql list,with slowest sqls ranking first$Hfrom\n#" |
sed -re "s/HrYhBy/\n/g" > $Hfile.slowtop

# append to slowtop.his

{
echo "# ModeAppendTime `date '+%Y-%m-%d %H:%M:%S'`" 
echo
cat $Hfile.slowtop
} >> $Hfile.slowtop.his

# truncate $Hfile.slowtop.his

/root/mode/trun_log $Hfile.slowtop.his

# rm tmp

rm -f $Hslowlog 

# end 


