#!/bin/bash 
# ------------------------------------------------------------------------------------------------------------------------------------------------------
# function:
#          This script extracts the top "N" worst sqls ordered by rows_sent,which often lead to tomcat memory overflow when the rows_sent is very large
# usages  :
#          ./badsql_rows_sent [<N>]
# e.g.    :
#          ./badsql_rows_sent       # when No <N> is given,it defaults to 50
#          ./badsql_rows_sent   50    
#          ./badsql_rows_sent  100   
# remarks :
#          This list of sqls is also called 'tomcat killer'
# -----------------------------------------------------------------------------------------------------------------------------------------------------

# top n

Htopn=$1
if [ -z "$Htopn" ]; then
   Htopn=50
elif echo "$Htopn" | grep -E "^[0-9]+$" >/dev/null; then
   :
else
   exit
fi

# the MySQL slow.log

Hfile=`ls -1t /var/lib/mysql/*-slow.log 2>/dev/null | head -n 1`
[ -z "$Hfile" ] && exit 

# use the last 500000 lines for analization

Hslowlog=/root/mode/tmp/Hslowlog$$.tmp
tail -n 500000 $Hfile > $Hslowlog

# filter etc.

cat $Hslowlog |
sed -re "/^(# User@Host: )/ i # Time: unknown" | sed -re "s/$/HrYhBy/" |
tr -d "\n" |
sed -re "s/(# Time: [0-9]{6} [0-9]{2}:[0-9]{2}:[0-9]{2}HrYhBy)# Time: unknownHrYhBy/\n\1/g" | sed -re "s/(# Time: ([0-9]{6} |unknown))/\n\1/g" |
grep -E "Rows_sent: [0-9]{4,}" |
grep -E -v "/\*!40001 SQL_NO_CACHE \*/" |
sed -re "s/(.*Rows_sent: ([0-9]+).*)/\2 \1/" |
sort -gr | sed -re "s/^[0-9]+ (.*)/\1/" |
grep -n ""    |
sed -n "1,$Htopn p" | 
sed -re "1,10 s/^([0-9]+):/# Ranked \1 !!! 元芳，怎么办呢?\n#\n/" |
sed -re "11,$ s/^([0-9]+):/# Ranked \1\n#\n/" |
sed -re "1 i #\n# Mode generated bad sql list,with most rows_sent sqls ranking first$Hfrom\n#" |
sed -re '/Rows_sent: [0-9]{5}([^0-9]|$)/ i # mode comment: bad sql!\n#' |
sed -re '/Rows_sent: [0-9]{6}([^0-9]|$)/ i # mode comment: very bad sql!\n#' |
sed -re '/Rows_sent: [0-9]{7,}/i # mode comment: extra bad sql!\n#' |
sed -re "s/HrYhBy/\n/g" > $Hfile.top

# append to top.his

{
echo "# ModeAppendTime `date '+%Y-%m-%d %H:%M:%S'`" 
echo
cat $Hfile.top
} >> $Hfile.top.his

# truncate $Hfile.top.his

/root/mode/trun_log $Hfile.top.his

# rm tmp

rm -f $Hslowlog 

# end 


