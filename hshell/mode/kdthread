#!/bin/bash
# ---------------------------------------------------------------------------------------------------------------------------------
# This script will only test or kill the 'flush tables' and 'flush tables with read lock' threads generated by mysqldump.
# Other mode utilities are provided and should be used to kill the underlying bad sqls
#                                                                                                                     hry 
#                                                                                                                     2014-10-21  
# ---------------------------------------------------------------------------------------------------------------------------------

#

trap "" INT

# get mysql server ip

. /root/mode/mysqldip

# -----------------------------------------------------------------------------------------------
# samples
# -----------------------------------------------------------------------------------------------
# 5.1.57
# -----------------------------------------------------------------------------------------------
# Flushing tables                  FLUSH /*!40101 LOCAL */ TABLES
# Flushing tables                  FLUSH TABLES
# Flushing tables                  FLUSH TABLES WITH READ LOCK
# Waiting to get readlock          FLUSH TABLES WITH READ LOCK
# -----------------------------------------------------------------------------------------------
# 5.5
# -----------------------------------------------------------------------------------------------
# Waiting for table flush          FLUSH /*!40101 LOCAL */ TABLES 
# Waiting for table flush          FLUSH TABLES 
# Waiting for table flush          FLUSH TABLES WITH READ LOCK 
# Waiting for global read lock     FLUSH TABLES WITH READ LOCK 
# -----------------------------------------------------------------------------------------------

# The following 3 lines are for 5.1
Hgrepsamples="Flushing tables\tFLUSH /\*!40101 LOCAL \*/ TABLES|"
Hgrepsamples="${Hgrepsamples}Flushing tables\tFLUSH +TABLES( +WITH +READ +LOCK)?|"
Hgrepsamples="${Hgrepsamples}Waiting to get readlock\tFLUSH +TABLES +WITH +READ +LOCK|"
# The following 2 lines are for 5.5
Hgrepsamples="${Hgrepsamples}Waiting for table flush\tFLUSH /\*!40101 LOCAL \*/ TABLES|"
Hgrepsamples="${Hgrepsamples}Waiting for table flush\tFLUSH +TABLES( +WITH +READ +LOCK)?|"
Hgrepsamples="${Hgrepsamples}Waiting for global read lock\tFLUSH +TABLES +WITH +READ +LOCK"

#

/root/mode/seecfg -s $HMYSQLDIP "show processlist" | 
grep -Pi  "\t($Hgrepsamples)" |
sed -re "s/^([0-9]+).*/\/root\/mode\/modemsg kdthread 'mysqldump thread \1 will be killed' more;\/root\/mode\/seecfg $HMYSQLDIP 'kill \1'/" |
if [ "$1" != "kill" ]; then
   grep -E "mysqldump" >/dev/null
else
   bash
fi


###################################################################################################################################################################################################
# MySQL Bug #44884 -- KILL of FLUSH TABLES does not remove TDC version lock on tables in use
###################################################################################################################################################################################################
# The bug is a side effect of FLUSH TABLES implementation, which works as intended.
# Essentially, FLUSH TABLES statement should be seen by all as a combination of two commands: FLUSH TABLES NOWAIT, which is instant, and marks all tables for invalidation, and waiting for
# the invalidated tables to disappear.
# A table marked for invalidation can not be used in any connection. 
# The request in this bug report is, essentially, when the second step is killed, to undo the effects of the first step. This is quite hard to accomplish since the two steps are not performed
# in one atomic block. 
# We're looking at changing the implementation of FLUSH TABLES to only mark tables for flush, and then gradually expel flushed tables one by one.
# At this point it's unclear how to expel even a single table without disturbing concurrent transactions  -- i.e. in a non-blocking fashion.
# Even when we solve that, however, the solution may have impact on performance of highly loaded and highly concurrent servers, and uncover some up to now unknown side effects, 
# especially since currently FLUSH TABLES leads to ER_LOCK_DEADLOCK errors produced in transactional environments (i.e. simply aborts transactions).
###################################################################################################################################################################################################
# Refer to http://bugs.mysql.com/bug.php?id=44884 for detail
###################################################################################################################################################################################################


