#!/bin/bash
# ---------------------------------------------------------------------------------------
# function:
#          monitor java memory usage
#
# ---------------------------------------------------------------------------------------


# exit if no tomcats have been installed 

[ `ls -d /usr/local/tomcat*/ 2>/dev/null | wc -l` -eq 0 ] && exit 

# check bc

if [ ! -f /usr/bin/bc ]; then
   /root/mode/modemsg jvstat "No bc utilities are installed!" more
   exit 1
fi

# check java

if [ ! -f /usr/local/jdk6/bin/java ]; then
   /root/mode/modemsg jvstat "No java of mode standard was installed!" more
   exit 1
fi
Htfile=/root/mode/tmp/jvstat$$.tmp

#

Hwlimit=20
Hwlimit_threshold_high=90
if [ -f /etc/.mode_jv_tom_wlimit ]; then
   Hwlimit1=`cat /etc/.mode_jv_tom_wlimit | head -n 1`
   if echo $Hwlimit1 | grep -E "^[0-9]+$" >/dev/null; then
      Hwlimit1=$[10#$Hwlimit1]
      if [ $Hwlimit1 -ge $Hwlimit ]; then
         Hwlimit=$[Hwlimit1+1]
      fi
      if [ $Hwlimit -ge $Hwlimit_threshold_high ]; then
         Hwlimit=$Hwlimit_threshold_high
      fi
   fi
fi

#

Hjtomdirs=`/root/mode/.jtomdirs`
if [ -z "$Hjtomdirs" ]; then 
   exit
fi
/root/mode/.jseetom "$1" | grep -E "$Hjtomdirs" | 
while read -r ni nj nk; do
   Hcmdline=`ps -ef | grep -E "\-Djava\.io\.tmpdir=$nk/temp org\.apache\.catalina\.startup\.Bootstrap start$" | grep -v grep`
   #
   while read -r Hacmdline;do
      Htcmdline="$Hacmdline"
      break
   done <<< "$Hcmdline"
   #
   if [ -z "$Htcmdline" ]; then
      continue
   fi
   # get the process id of tomcat and the user who started this tomcat

   i=`echo "$Htcmdline" | sed -re "s/^([^ ]+) +([0-9]+).*/\2/"`
   j="$nj"

   # 
   Hpid="$i      "
   Hpid=${Hpid:0:7}
   #
   if [ ${#j} -le 9 ]; then
      Htom="$j          "
      Htom=${Htom:0:10}
   else
      Htom="$j "
   fi
   # 
   >/root/mode/tmp/Hjvstat_$i_$$.tmp
   /usr/local/jdk6/bin/jmap -heap $Hpid >/root/mode/tmp/Hjvstat_$i_$$.tmp 2>&1 &
   Hjmap_p=$!
   sleep 0.5
   Hend_by_break=0
   Hwloop=0
   Hpnormal=100
   Hjv_tom_trace1="$Htom jmap began at `LANG=en_US;date` Hwlimit=$Hwlimit"
   while [ $Hwloop -lt $Hwlimit ];do
      cat /root/mode/tmp/Hjvstat_$i_$$.tmp | tr -d '\0' > $Htfile
      #
      if cat $Htfile 2>/dev/null | grep -Pi -A 4 'Perm Generation' | grep -Pi '% +used' >/dev/null; then
         # -------------------------------------------------------------
         # case 1
         # -------------------------------------------------------------
         if /usr/local/jdk6/bin/java -version 2>&1 | grep -Pi "java version \"1\.7\." >/dev/null; then
            if ps -ef | grep -E "^[^ ]+ +$Hjmap_p +.*/usr/local/jdk6/bin/jmap -heap $i$" | grep -v grep >/dev/null; then
               kill $Hjmap_p &>/dev/null 
            fi
         fi
         Hpnormal=0
         Hend_by_break=1
         break
      elif cat $Htfile 2>/dev/null | grep -Pi 'Error attaching to process' >/dev/null; then
         # -------------------------------------------------------------
         # case 2
         # -------------------------------------------------------------
         # two sub cases for 'Error attaching to process'
         # 1.No such java process
         # 2.This java processs is being monitored by jmap
         # -------------------------------------------------------------
         if ! ps -ef | grep -E "^[^ ]+ +$i +[0-9]+ +.*\-Djava\.io\.tmpdir=$nk/temp org\.apache\.catalina\.startup\.Bootstrap start" | grep -v grep >/dev/null; then
            # case 2.1: No such process (maybe just stopped by others)
            Hpnormal=1
         else
            # case 2.2: This process is already jmapped by other process(es)
            #           (probably dead jmap process(es) or our previous uncompleted jmap process)
            Hpnormal=2
         fi
         Hend_by_break=1
         break
      elif cat $Htfile 2>/dev/null | grep -Pi "Attaching to process ID $i,.*please wait" >/dev/null; then
         if [ `cat $Htfile 2>/dev/null | wc -l` -eq 1 ]; then
            # ----------------------------------------------------------------------
            # case 3: connection timeout caused by 
            #                                      too high cpu load,
            #                                      too high memory load,
            #                                      exhausted disk space,
            #                                      unhealthy tomcat or other cases
            # ----------------------------------------------------------------------
            # set to 3 temporarily
            # Hpnormal may be changed to other value during wait time
            # ----------------------------------------------------
            Hpnormal=3
         else
            if ! cat $Htfile 2>/dev/null | grep -Pi "Debugger attached successfully" >/dev/null; then
               # state between 'Debugger attached successfully' and 'Error attaching to process'
               if cat $Htfile 2>/dev/null | grep -Pi "can't determine target's VM version" >/dev/null; then
                  # -----------------------------------------
                  # case 4
                  # tomcat may be just starting
                  # -----------------------------------------
                  Hpnormal=4
                  Hend_by_break=1
                  break 
               else
                 # case 5
                 # interesting case
                 Hpnormal=5
               fi
            else
               # case 6
               # rare case
               Hpnormal=6
            fi
         fi
      else
         # other cases
         Hpnormal=100
      fi
      #
      sleep 1
      Hwloop=$[$Hwloop+1]
   done
   Hjv_tom_trace2="$Htom jmap ended at `LANG=en_US;date` Hpnormal=$Hpnormal"
   if [ $Hend_by_break -eq 0 ]; then
      echo $Hwlimit >/etc/.mode_jv_tom_wlimit
      {
      echo 
      echo "######################"
      echo $Hjv_tom_trace1   
      echo $Hjv_tom_trace2   
      cat $Htfile
      } >> /root/mode/logs/jv_tom_trace.log
   fi
   #
   rm -f /root/mode/tmp/Hjvstat_$i_$$.tmp
   #
   if [ $Hpnormal -eq 1 ]; then
      echo "$Hpid$Htom ... " "This tomcat has just been stopped or killed!" 
      continue 
   elif [ $Hpnormal -eq 2 ]; then
      echo "$Hpid$Htom ... " "This tomcat is being monitored by other jmap process(es)!" 
      # ----------------------------------------------------------------------------------------------------------------
      # If the other jmap process(es) are dead and called by /root/mode/jvstat,they will be killed by their own jvstats.
      # we do MOT kill them
      # ----------------------------------------------------------------------------------------------------------------
      # Dead jmap not called by jvstat will not be killed here.Manual interference is needed
      # ------------------------------------------------------------------------------------------------------------ 
      continue 
   elif [ $Hpnormal -eq 3 ]; then
      echo "$Hpid$Htom ... " "Timeout caused by unhealthy tomcat or too high cpu/memory/disk load.Suggest restarting tomcat!" 
      if ps -ef | grep -E "^[^ ]+ +$Hjmap_p +.*/usr/local/jdk6/bin/jmap -heap $i$" | grep -v grep >/dev/null; then
         # kill my own jmap with signal '-9' if it still exists
         kill -9 $Hjmap_p &>/dev/null
      fi
      continue 
   elif [ $Hpnormal -eq 4 ]; then
      echo "$Hpid$Htom ... " "Can't determine tomcat's VM version.This tomcat may be just starting or almost stopped!" 
      if ps -ef | grep -E "^[^ ]+ +$Hjmap_p +.*/usr/local/jdk6/bin/jmap -heap $i$" | grep -v grep >/dev/null; then
         # kill my own jmap with signal '-9' if it still exists
         kill -9 $Hjmap_p &>/dev/null
      fi
      continue 
   elif [ $Hpnormal -ge 5 ]; then
      echo "$Hpid$Htom ... " "Poor server performance,often caused by cpu/memory/disk stress.This tomcat will be skipped for the moment!" 
      if ps -ef | grep -E "^[^ ]+ +$Hjmap_p +.*/usr/local/jdk6/bin/jmap -heap $i$" | grep -v grep >/dev/null; then
         # kill my own jmap with signal '-9' if it still exists
         kill -9 $Hjmap_p &>/dev/null
      fi
      continue 
   fi
   #
   Hpermmax=`cat $Htfile | grep -E "MaxPermSize" | sed -re "s/.*\((.*)\)/\1/" | sed -re "s/(.*)MB/\1/"`
   Hpermused=`cat $Htfile | grep -E -A 2 "Perm Generation" | sed -n "3 p" | sed -re "s/.*\((.*)\)/\1/" | sed -re "s/(.*)MB/\1/"`
   Hold=`cat $Htfile | grep -Pi -A 3 "(Old|tenured) Generation" | grep capacity | sed -re "s/.*\((.*)\)/\1/"| sed -re "s/(.*)MB/\1/"`
   Holdused=`cat $Htfile | grep -Pi -A 3 "(Old|tenured) Generation" | grep used | sed -re "s/.*\((.*)\)/\1/"| sed -re "s/(.*)MB/\1/"`
   #
   Hgc=`/usr/local/jdk6/bin/jstat -gcutil $Hpid 1s 1 2>/dev/null | sed -n "2 p"`
   Hgcmajor_av= 
   if [ "$Hgc" = "" ]; then
      Hgcminor=-1
      Hgcmajor=-1
   else
      Hgcminor=`echo "$Hgc" | sed -re "s/^ *([^ ]+ +){5}([^ ]+).*/\2/"`
      Hgcmajor=`echo "$Hgc" | sed -re "s/^ *([^ ]+ +){7}([^ ]+).*/\2/"`
      Hgcmajort=`echo "$Hgc" | sed -re "s/^ *([^ ]+ +){8}([^ ]+).*/\2/"`
      if [ $Hgcmajor -gt 0 ]; then
         Hgcmajor_av=[fgcat]\ `echo "scale=3;$Hgcmajort/$Hgcmajor" | bc -l` 
      fi
   fi
   Hwarn=" ^_^ "
   
   if [ $(echo "$Hpermused > 390" | bc) -eq 1 ]; then
      Hwarn="     "
   elif [ $(echo "$Holdused > 1000" | bc) -eq 1 ]; then
      Hwarn="     "
   elif [ $Hgcminor -eq -1 ]; then
      Hwarn=" !!! "
   else
      if [ $Hgcminor -le $Hgcmajor ]; then
         if /usr/local/jdk6/bin/java -version 2>&1 | grep "Client" >/dev/null; then
            Hwarn=" --- "
         else
            Hwarn="     "
         fi
      fi
   fi
   echo "$Hpid$Htom$Hwarn" [perm] $Hpermmax $Hpermused [old] $Hold $Holdused [gc] $Hgcminor $Hgcmajor $Hgcmajor_av
done

#

rm -f $Htfile

# end 


